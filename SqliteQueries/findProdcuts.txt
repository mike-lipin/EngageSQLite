---- base query
select p.Id, p.UniqueId, p.ExhibitorId, p.ProductCategoryId, p.QRCode, p.Name
     , p.Description, p.ImageUrl
     , (select 1 from private.Rate r where r.RatedUniqueId = p.UniqueId and ifnull(r.Status, '') <> 'deleted') as IsRated
     , (select 1 from private.Favorite f where f.FavoritedUniqueId = p.UniqueId and ifnull(f.Status, '') <> 'deleted') as IsFavorite
     , e.CompanyName as ExhibitorName
     , ps.BoothNumbers
from [Product] p
  join ProductSearch ps on ps.Id = p.Id
  join Exhibitor e on e.Id = p.ExhibitorId
-- where section
-- order section
limit @selectNumberOfRecords offset @skipNumberOfRecords


---- if you want to add filter by product categories, add to where section
where p.ProductCategoryId in (idsstring)

---- you have 2 ways to calc idsstring
---- 1. Load all Product category tree in memory and get list of all ids from selected nodes and all its subnodes
---- 2. Execute query with selected nodes ids
select group_concat(result.Id)
from (select distinct pc2.Id
        from ProductCategory pc
          join ProductCategory pc2 on pc2.NodePath >= pc.NodePath and pc2.NodePath <= pc.NodePath || 'a'
        where pc.Id in (selected ids string)) result


---- if you want to search by some string, add to where section
where ProductSearch match 'keyword otherkeyword anotherkeyword'
---- or 
where ProductSearch match 'keyword* otherkeyword* anotherkeyword*'

---- you can combine this
where p.ProductCategoryId in (idsstring) and ProductSearch match 'keyword* otherkeyword* anotherkeyword*'



---- order modes:
---- order by product name
order by lower(Name)
---- order by exhibitor name and after that by product name
order by lower(ExhibitorName), lower(Name)
---- order by booth ??????????
order by ps.BoothNumbers, lower(Name)